.answer {
    white-space: pre-line;
    overflow-wrap: break-word;
    /* max-width: 100vw; */
    width: 100%;
    margin-bottom: 100px;
    text-align: left;
    width: auto;
    flex-grow: 1;
    max-width: 600px;
}

.promptBox {
    bottom: 0;
    margin-bottom: 30px;
    position: fixed;
    width: 100%;
    justify-content: center;
    align-items: center;
}

.searchBox {
    width: auto;
    flex-grow: 1;
    max-width: 400px;
    background-color: rgb(18, 18, 35);
}

body {
    background-color: rgb(18, 18, 35);
    color: #FFF;
}

.spinner {
    position: absolute;
    width: 9px;
    height: 9px;
  }
  
  .spinner div {
    position: absolute;
    width: 50%;
    height: 150%;
    background: #FFF;
    transform: rotate(calc(var(--rotation) * 1deg)) translate(0, calc(var(--translation) * 1%));
    animation: spinner-fzua35 1s calc(var(--delay) * 1s) infinite ease;
  }
  
  .spinner div:nth-child(1) {
    --delay: 0.1;
    --rotation: 36;
    --translation: 150;
  }
  
  .spinner div:nth-child(2) {
    --delay: 0.2;
    --rotation: 72;
    --translation: 150;
  }
  
  .spinner div:nth-child(3) {
    --delay: 0.3;
    --rotation: 108;
    --translation: 150;
  }
  
  .spinner div:nth-child(4) {
    --delay: 0.4;
    --rotation: 144;
    --translation: 150;
  }
  
  .spinner div:nth-child(5) {
    --delay: 0.5;
    --rotation: 180;
    --translation: 150;
  }
  
  .spinner div:nth-child(6) {
    --delay: 0.6;
    --rotation: 216;
    --translation: 150;
  }
  
  .spinner div:nth-child(7) {
    --delay: 0.7;
    --rotation: 252;
    --translation: 150;
  }
  
  .spinner div:nth-child(8) {
    --delay: 0.8;
    --rotation: 288;
    --translation: 150;
  }
  
  .spinner div:nth-child(9) {
    --delay: 0.9;
    --rotation: 324;
    --translation: 150;
  }
  
  .spinner div:nth-child(10) {
    --delay: 1;
    --rotation: 360;
    --translation: 150;
  }
  
  @keyframes spinner-fzua35 {
    0%, 10%, 20%, 30%, 50%, 60%, 70%, 80%, 90%, 100% {
      transform: rotate(calc(var(--rotation) * 1deg)) translate(0, calc(var(--translation) * 1%));
    }
  
    50% {
      transform: rotate(calc(var(--rotation) * 1deg)) translate(0, calc(var(--translation) * 1.5%));
    }
  }